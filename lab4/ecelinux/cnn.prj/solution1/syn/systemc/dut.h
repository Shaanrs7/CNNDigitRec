// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dut_HH_
#define _dut_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dut_cnn_xcel.h"
#include "dut_result.h"

namespace ap_rtl {

struct dut : public sc_module {
    // Port declarations 12
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > strm_in_V_V_dout;
    sc_in< sc_logic > strm_in_V_V_empty_n;
    sc_out< sc_logic > strm_in_V_V_read;
    sc_out< sc_lv<32> > strm_out_V_V_din;
    sc_in< sc_logic > strm_out_V_V_full_n;
    sc_out< sc_logic > strm_out_V_V_write;


    // Module declarations
    dut(sc_module_name name);
    SC_HAS_PROCESS(dut);

    ~dut();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    dut_result* result_U;
    dut_cnn_xcel* grp_dut_cnn_xcel_fu_118;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_20;
    sc_signal< sc_logic > strm_in_V_V_blk_n;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_44;
    sc_signal< sc_logic > strm_out_V_V_blk_n;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_4;
    sc_signal< bool > ap_sig_53;
    sc_signal< sc_lv<32> > tmp_V_2_reg_173;
    sc_signal< bool > ap_sig_59;
    sc_signal< sc_lv<49> > p_Result_s_fu_148_p3;
    sc_signal< sc_lv<49> > p_Result_s_reg_178;
    sc_signal< sc_lv<10> > i_1_fu_162_p2;
    sc_signal< sc_lv<10> > i_1_reg_186;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_73;
    sc_signal< sc_lv<1> > exitcond_fu_156_p2;
    sc_signal< sc_lv<10> > result_address0;
    sc_signal< sc_logic > result_ce0;
    sc_signal< sc_lv<32> > result_q0;
    sc_signal< sc_logic > grp_dut_cnn_xcel_fu_118_ap_start;
    sc_signal< sc_logic > grp_dut_cnn_xcel_fu_118_ap_done;
    sc_signal< sc_logic > grp_dut_cnn_xcel_fu_118_ap_idle;
    sc_signal< sc_logic > grp_dut_cnn_xcel_fu_118_ap_ready;
    sc_signal< sc_lv<10> > grp_dut_cnn_xcel_fu_118_output_V_address0;
    sc_signal< sc_logic > grp_dut_cnn_xcel_fu_118_output_V_ce0;
    sc_signal< sc_logic > grp_dut_cnn_xcel_fu_118_output_V_we0;
    sc_signal< sc_lv<32> > grp_dut_cnn_xcel_fu_118_output_V_d0;
    sc_signal< sc_lv<10> > i_reg_107;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_110;
    sc_signal< sc_logic > ap_reg_grp_dut_cnn_xcel_fu_118_ap_start;
    sc_signal< sc_lv<64> > tmp_fu_168_p1;
    sc_signal< sc_lv<17> > tmp_71_fu_144_p1;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_st1_fsm_0;
    static const sc_lv<5> ap_ST_st2_fsm_1;
    static const sc_lv<5> ap_ST_st3_fsm_2;
    static const sc_lv<5> ap_ST_st4_fsm_3;
    static const sc_lv<5> ap_ST_st5_fsm_4;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<10> ap_const_lv10_240;
    static const sc_lv<10> ap_const_lv10_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_110();
    void thread_ap_sig_20();
    void thread_ap_sig_44();
    void thread_ap_sig_53();
    void thread_ap_sig_59();
    void thread_ap_sig_73();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st5_fsm_4();
    void thread_exitcond_fu_156_p2();
    void thread_grp_dut_cnn_xcel_fu_118_ap_start();
    void thread_i_1_fu_162_p2();
    void thread_p_Result_s_fu_148_p3();
    void thread_result_address0();
    void thread_result_ce0();
    void thread_strm_in_V_V_blk_n();
    void thread_strm_in_V_V_read();
    void thread_strm_out_V_V_blk_n();
    void thread_strm_out_V_V_din();
    void thread_strm_out_V_V_write();
    void thread_tmp_71_fu_144_p1();
    void thread_tmp_fu_168_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
