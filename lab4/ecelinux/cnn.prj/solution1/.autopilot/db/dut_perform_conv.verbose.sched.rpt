

================================================================
== Vivado HLS Report for 'dut_perform_conv'
================================================================
* Date:           Wed Nov  1 17:41:30 2017

* Version:        2016.2 (Build 1577090 on Thu Jun 02 16:59:10 MDT 2016)
* Project:        cnn.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.64|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  7639|  7639|  7639|  7639|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------------+------+------+----------+-----------+-----------+------+----------+
        |                |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        |    Loop Name   |  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------------+------+------+----------+-----------+-----------+------+----------+
        |- Loop 1        |   800|   800|         1|          -|          -|   800|    no    |
        |- L_L_LOOP1     |  4020|  4020|        26|          5|          1|   800|    yes   |
        |- LOOP2         |  2816|  2816|        88|          -|          -|    32|    no    |
        | + LOOP2.1      |    85|    85|        17|          -|          -|     5|    no    |
        |  ++ LOOP2.1.1  |    15|    15|         3|          -|          -|     5|    no    |
        +----------------+------+------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 5, depth = 26


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 34
* Pipeline: 1
  Pipeline-0: II = 5, D = 26, States = { 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (exitcond1)
	2  / (!exitcond1)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	29  / (exitcond_flatten4)
	24  / (!exitcond_flatten4)
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	3  / true
29 --> 
	30  / (!exitcond3)
30 --> 
	31  / true
31 --> 
	32  / (!exitcond5)
	29  / (exitcond5)
32 --> 
	31  / (exitcond)
	33  / (!exitcond)
33 --> 
	34  / true
34 --> 
	32  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: stg_35 [1/1] 1.57ns
:0  br label %1


 <State 2>: 3.64ns
ST_2: t_V [1/1] 0.00ns
:0  %t_V = phi i10 [ 0, %0 ], [ %i_V, %2 ]

ST_2: exitcond1 [1/1] 2.07ns
:1  %exitcond1 = icmp eq i10 %t_V, -224

ST_2: empty [1/1] 0.00ns
:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 800, i64 800, i64 800)

ST_2: i_V [1/1] 1.84ns
:3  %i_V = add i10 %t_V, 1

ST_2: stg_40 [1/1] 1.57ns
:4  br i1 %exitcond1, label %.preheader1169, label %2

ST_2: tmp_2 [1/1] 0.00ns
:0  %tmp_2 = zext i10 %t_V to i64

ST_2: output_V_addr [1/1] 0.00ns
:1  %output_V_addr = getelementptr [800 x i32]* %output_V, i64 0, i64 %tmp_2

ST_2: stg_43 [1/1] 2.71ns
:2  store i32 0, i32* %output_V_addr, align 4

ST_2: stg_44 [1/1] 0.00ns
:3  br label %1


 <State 3>: 8.12ns
ST_3: indvar_flatten3 [1/1] 0.00ns
.preheader1169:0  %indvar_flatten3 = phi i10 [ %indvar_flatten_next4, %.preheader1172 ], [ 0, %1 ]

ST_3: t_V_1 [1/1] 0.00ns
.preheader1169:1  %t_V_1 = phi i6 [ %t_V_1_mid2, %.preheader1172 ], [ 0, %1 ]

ST_3: indvar_flatten4 [1/1] 0.00ns
.preheader1169:2  %indvar_flatten4 = phi i6 [ %indvar_flatten_next3, %.preheader1172 ], [ 0, %1 ]

ST_3: t_V_3 [1/1] 0.00ns
.preheader1169:3  %t_V_3 = phi i1 [ %t_V_3_mid2, %.preheader1172 ], [ false, %1 ]

ST_3: indvar_flatten [1/1] 0.00ns
.preheader1169:4  %indvar_flatten = phi i6 [ %indvar_flatten_next, %.preheader1172 ], [ 0, %1 ]

ST_3: t_V_7 [1/1] 0.00ns
.preheader1169:6  %t_V_7 = phi i3 [ %y_V_1, %.preheader1172 ], [ 0, %1 ]

ST_3: t_V_3_cast [1/1] 0.00ns
.preheader1169:9  %t_V_3_cast = zext i1 %t_V_3 to i6

ST_3: tmp_6 [1/1] 1.72ns
.preheader1169:10  %tmp_6 = add i6 %t_V_3_cast, %t_V_1

ST_3: tmp_6_cast2 [1/1] 0.00ns
.preheader1169:11  %tmp_6_cast2 = zext i6 %tmp_6 to i9

ST_3: tmp_29 [1/1] 0.00ns
.preheader1169:12  %tmp_29 = trunc i6 %tmp_6 to i5

ST_3: p_shl [1/1] 0.00ns
.preheader1169:13  %p_shl = call i8 @_ssdm_op_BitConcatenate.i8.i5.i3(i5 %tmp_29, i3 0)

ST_3: p_shl_cast [1/1] 0.00ns
.preheader1169:14  %p_shl_cast = zext i8 %p_shl to i9

ST_3: tmp_7 [1/1] 1.72ns
.preheader1169:15  %tmp_7 = add i9 %tmp_6_cast2, %p_shl_cast

ST_3: exitcond_flatten4 [1/1] 2.07ns
.preheader1169:20  %exitcond_flatten4 = icmp eq i10 %indvar_flatten3, -224

ST_3: indvar_flatten_next4 [1/1] 1.84ns
.preheader1169:21  %indvar_flatten_next4 = add i10 1, %indvar_flatten3

ST_3: exitcond_flatten [1/1] 1.94ns
.preheader1172:2  %exitcond_flatten = icmp eq i6 %indvar_flatten4, 25

ST_3: not_exitcond_flatten [1/1] 1.37ns
.preheader1172:3  %not_exitcond_flatten = xor i1 %exitcond_flatten, true

ST_3: t_V_3_mid [1/1] 0.00ns (grouped into LUT with out node t_V_3_mid2)
.preheader1172:4  %t_V_3_mid = and i1 %t_V_3, %not_exitcond_flatten

ST_3: n_V [1/1] 1.72ns
.preheader1172:5  %n_V = add i6 1, %t_V_1

ST_3: not_exitcond_flatten1 [1/1] 0.00ns (grouped into LUT with out node tmp2)
.preheader1172:9  %not_exitcond_flatten1 = xor i1 %exitcond_flatten, true

ST_3: p_3_cast_mid [1/1] 0.00ns (grouped into LUT with out node tmp2)
.preheader1172:10  %p_3_cast_mid = and i1 %t_V_3, %not_exitcond_flatten1

ST_3: tmp_6_cast2_mid [1/1] 0.00ns
.preheader1172:11  %tmp_6_cast2_mid = zext i6 %n_V to i9

ST_3: tmp_31 [1/1] 0.00ns
.preheader1172:12  %tmp_31 = trunc i6 %n_V to i5

ST_3: p_shl_mid [1/1] 0.00ns
.preheader1172:13  %p_shl_mid = call i8 @_ssdm_op_BitConcatenate.i8.i5.i3(i5 %tmp_31, i3 0)

ST_3: p_shl_cast_mid [1/1] 0.00ns
.preheader1172:14  %p_shl_cast_mid = zext i8 %p_shl_mid to i9

ST_3: tmp_7_mid [1/1] 1.72ns
.preheader1172:15  %tmp_7_mid = add i9 %tmp_6_cast2_mid, %p_shl_cast_mid

ST_3: OP2_V_cast_mid2159_v_v [1/1] 0.00ns (grouped into LUT with out node OP2_V_cast_mid2_v_v)
.preheader1172:16  %OP2_V_cast_mid2159_v_v = select i1 %exitcond_flatten, i9 %tmp_7_mid, i9 %tmp_7

ST_3: exitcond4 [1/1] 1.62ns
.preheader1172:18  %exitcond4 = icmp eq i3 %t_V_7, -3

ST_3: exitcond7_mid [1/1] 0.00ns (grouped into LUT with out node exitcond7_mid2)
.preheader1172:19  %exitcond7_mid = and i1 %exitcond4, %not_exitcond_flatten

ST_3: exitcond_flatten2 [1/1] 1.94ns
.preheader1172:20  %exitcond_flatten2 = icmp eq i6 %indvar_flatten, 25

ST_3: exitcond_flatten_mid [1/1] 1.37ns
.preheader1172:21  %exitcond_flatten_mid = and i1 %exitcond_flatten2, %not_exitcond_flatten

ST_3: t_V_1_mid2 [1/1] 1.37ns
.preheader1172:22  %t_V_1_mid2 = select i1 %exitcond_flatten, i6 %n_V, i6 %t_V_1

ST_3: t_V_3_not [1/1] 0.00ns (grouped into LUT with out node m_V)
.preheader1172:23  %t_V_3_not = xor i1 %t_V_3, true

ST_3: m_V [1/1] 1.37ns (out node of the LUT)
.preheader1172:24  %m_V = or i1 %exitcond_flatten, %t_V_3_not

ST_3: tmp_24 [1/1] 1.37ns
.preheader1172:26  %tmp_24 = or i1 %exitcond_flatten_mid, %exitcond_flatten

ST_3: t_V_3_cast_mid1 [1/1] 0.00ns
.preheader1172:28  %t_V_3_cast_mid1 = zext i1 %m_V to i6

ST_3: p_3_cast_mid2 [1/1] 0.00ns (grouped into LUT with out node tmp2)
.preheader1172:29  %p_3_cast_mid2 = select i1 %exitcond_flatten_mid, i1 %m_V, i1 %p_3_cast_mid

ST_3: p_3_cast_mid2_cast [1/1] 0.00ns (grouped into LUT with out node tmp2)
.preheader1172:30  %p_3_cast_mid2_cast = zext i1 %p_3_cast_mid2 to i3

ST_3: tmp_6_mid1 [1/1] 1.72ns
.preheader1172:31  %tmp_6_mid1 = add i6 %t_V_3_cast_mid1, %t_V_1_mid2

ST_3: tmp_6_cast2_mid1 [1/1] 0.00ns
.preheader1172:32  %tmp_6_cast2_mid1 = zext i6 %tmp_6_mid1 to i9

ST_3: tmp_32 [1/1] 0.00ns
.preheader1172:33  %tmp_32 = trunc i6 %tmp_6_mid1 to i5

ST_3: p_shl_mid1 [1/1] 0.00ns
.preheader1172:34  %p_shl_mid1 = call i8 @_ssdm_op_BitConcatenate.i8.i5.i3(i5 %tmp_32, i3 0)

ST_3: p_shl_cast_mid1 [1/1] 0.00ns
.preheader1172:35  %p_shl_cast_mid1 = zext i8 %p_shl_mid1 to i9

ST_3: tmp_7_mid1 [1/1] 1.72ns
.preheader1172:36  %tmp_7_mid1 = add i9 %tmp_6_cast2_mid1, %p_shl_cast_mid1

ST_3: OP2_V_cast_mid2_v_v [1/1] 1.37ns (out node of the LUT)
.preheader1172:37  %OP2_V_cast_mid2_v_v = select i1 %exitcond_flatten_mid, i9 %tmp_7_mid1, i9 %OP2_V_cast_mid2159_v_v

ST_3: exitcond_flatten_not [1/1] 0.00ns (grouped into LUT with out node exitcond7_mid2)
.preheader1172:85  %exitcond_flatten_not = xor i1 %exitcond_flatten2, true

ST_3: not_exitcond_flatten_mid [1/1] 0.00ns (grouped into LUT with out node exitcond7_mid2)
.preheader1172:86  %not_exitcond_flatten_mid = or i1 %exitcond_flatten, %exitcond_flatten_not

ST_3: exitcond7_mid2 [1/1] 1.37ns (out node of the LUT)
.preheader1172:87  %exitcond7_mid2 = and i1 %exitcond7_mid, %not_exitcond_flatten_mid

ST_3: t_V_3_mid2 [1/1] 1.37ns (out node of the LUT)
.preheader1172:88  %t_V_3_mid2 = select i1 %exitcond_flatten_mid, i1 %m_V, i1 %t_V_3_mid

ST_3: tmp_25 [1/1] 0.00ns (grouped into LUT with out node t_V_7_mid2)
.preheader1172:91  %tmp_25 = or i1 %exitcond7_mid2, %exitcond_flatten_mid

ST_3: tmp_33 [1/1] 0.00ns (grouped into LUT with out node t_V_7_mid2)
.preheader1172:92  %tmp_33 = or i1 %tmp_25, %exitcond_flatten

ST_3: t_V_7_mid2 [1/1] 1.37ns (out node of the LUT)
.preheader1172:93  %t_V_7_mid2 = select i1 %tmp_33, i3 0, i3 %t_V_7

ST_3: tmp2 [1/1] 1.37ns (out node of the LUT)
.preheader1172:112  %tmp2 = add i3 %p_3_cast_mid2_cast, %t_V_7_mid2

ST_3: indvar_flatten_op [1/1] 1.72ns
.preheader1172:259  %indvar_flatten_op = add i6 1, %indvar_flatten

ST_3: indvar_flatten_next [1/1] 1.37ns
.preheader1172:260  %indvar_flatten_next = select i1 %tmp_24, i6 1, i6 %indvar_flatten_op

ST_3: indvar_flatten40_op [1/1] 1.72ns
.preheader1172:261  %indvar_flatten40_op = add i6 1, %indvar_flatten4

ST_3: indvar_flatten_next3 [1/1] 1.37ns
.preheader1172:262  %indvar_flatten_next3 = select i1 %exitcond_flatten, i6 1, i6 %indvar_flatten40_op


 <State 4>: 8.64ns
ST_4: t_V_5 [1/1] 0.00ns
.preheader1169:5  %t_V_5 = phi i3 [ %t_V_5_cast3_mid2, %.preheader1172 ], [ 0, %1 ]

ST_4: t_V_5_mid [1/1] 1.37ns
.preheader1172:27  %t_V_5_mid = select i1 %tmp_24, i3 0, i3 %t_V_5

ST_4: OP2_V_0_1_mid2_v_v [1/1] 1.84ns
.preheader1172:42  %OP2_V_0_1_mid2_v_v = add i9 3, %OP2_V_cast_mid2_v_v

ST_4: OP2_V_0_1_mid2_v [1/1] 0.00ns
.preheader1172:43  %OP2_V_0_1_mid2_v = zext i9 %OP2_V_0_1_mid2_v_v to i64

ST_4: w_conv1_0_addr_1 [1/1] 0.00ns
.preheader1172:44  %w_conv1_0_addr_1 = getelementptr [4608 x i30]* @w_conv1_0, i64 0, i64 %OP2_V_0_1_mid2_v

ST_4: w_conv1_0_load_1 [2/2] 2.39ns
.preheader1172:45  %w_conv1_0_load_1 = load i30* %w_conv1_0_addr_1, align 4

ST_4: x_V_2_dup [1/1] 0.80ns
.preheader1172:89  %x_V_2_dup = add i3 1, %t_V_5_mid

ST_4: t_V_5_cast3_mid2 [1/1] 1.37ns
.preheader1172:95  %t_V_5_cast3_mid2 = select i1 %exitcond7_mid2, i3 %x_V_2_dup, i3 %t_V_5_mid

ST_4: t_V_5_cast3_mid2_cast [1/1] 0.00ns
.preheader1172:96  %t_V_5_cast3_mid2_cast = zext i3 %t_V_5_cast3_mid2 to i6

ST_4: t_V_5_cast24_cast_mid2_cast [1/1] 0.00ns
.preheader1172:97  %t_V_5_cast24_cast_mid2_cast = zext i3 %t_V_5_cast3_mid2 to i9

ST_4: tmp2_cast1 [1/1] 0.00ns
.preheader1172:113  %tmp2_cast1 = zext i3 %tmp2 to i7

ST_4: p_shl3 [1/1] 0.00ns
.preheader1172:114  %p_shl3 = call i6 @_ssdm_op_BitConcatenate.i6.i3.i3(i3 %tmp2, i3 0)

ST_4: p_shl3_cast [1/1] 0.00ns
.preheader1172:115  %p_shl3_cast = zext i6 %p_shl3 to i7

ST_4: tmp1 [1/1] 1.72ns
.preheader1172:116  %tmp1 = sub i7 %p_shl3_cast, %tmp2_cast1

ST_4: tmp1_cast19_cast [1/1] 0.00ns
.preheader1172:117  %tmp1_cast19_cast = sext i7 %tmp1 to i9

ST_4: i_index_V [1/1] 1.72ns
.preheader1172:118  %i_index_V = add i9 %tmp1_cast19_cast, %t_V_5_cast24_cast_mid2_cast

ST_4: newIndex6 [13/13] 3.38ns
.preheader1172:124  %newIndex6 = urem i9 %i_index_V, 200

ST_4: tmp_35 [1/1] 0.00ns
.preheader1172:137  %tmp_35 = trunc i7 %tmp1 to i6

ST_4: tmp1_0_1_cast [1/1] 1.72ns
.preheader1172:138  %tmp1_0_1_cast = add i6 7, %tmp_35

ST_4: i_index_V_0_1 [1/1] 1.72ns
.preheader1172:139  %i_index_V_0_1 = add i6 %tmp1_0_1_cast, %t_V_5_cast3_mid2_cast

ST_4: newIndex [1/1] 0.00ns
.preheader1172:140  %newIndex = zext i6 %i_index_V_0_1 to i64

ST_4: input_0_V_addr_1 [1/1] 0.00ns
.preheader1172:141  %input_0_V_addr_1 = getelementptr [200 x i32]* %input_0_V, i64 0, i64 %newIndex

ST_4: input_0_V_load_1 [2/2] 2.71ns
.preheader1172:142  %input_0_V_load_1 = load i32* %input_0_V_addr_1, align 4

ST_4: tmp1_0_2_cast [1/1] 1.72ns
.preheader1172:150  %tmp1_0_2_cast = add i6 14, %tmp_35

ST_4: i_index_V_0_2 [1/1] 1.72ns
.preheader1172:151  %i_index_V_0_2 = add i6 %tmp1_0_2_cast, %t_V_5_cast3_mid2_cast

ST_4: newIndex1 [1/1] 0.00ns
.preheader1172:152  %newIndex1 = zext i6 %i_index_V_0_2 to i64

ST_4: input_0_V_addr_2 [1/1] 0.00ns
.preheader1172:153  %input_0_V_addr_2 = getelementptr [200 x i32]* %input_0_V, i64 0, i64 %newIndex1

ST_4: input_0_V_load_2 [2/2] 2.71ns
.preheader1172:154  %input_0_V_load_2 = load i32* %input_0_V_addr_2, align 4


 <State 5>: 7.27ns
ST_5: x_V_2 [1/1] 0.80ns
.preheader1169:17  %x_V_2 = add i3 1, %t_V_5

ST_5: tmp_15_2 [1/1] 0.80ns
.preheader1169:18  %tmp_15_2 = add i3 2, %t_V_5

ST_5: w_conv1_0_load_1 [1/2] 2.39ns
.preheader1172:45  %w_conv1_0_load_1 = load i30* %w_conv1_0_addr_1, align 4

ST_5: OP2_V_0_2_mid2_v_v [1/1] 1.84ns
.preheader1172:47  %OP2_V_0_2_mid2_v_v = add i9 6, %OP2_V_cast_mid2_v_v

ST_5: OP2_V_0_2_mid2_v [1/1] 0.00ns
.preheader1172:48  %OP2_V_0_2_mid2_v = zext i9 %OP2_V_0_2_mid2_v_v to i64

ST_5: w_conv1_0_addr_2 [1/1] 0.00ns
.preheader1172:49  %w_conv1_0_addr_2 = getelementptr [4608 x i30]* @w_conv1_0, i64 0, i64 %OP2_V_0_2_mid2_v

ST_5: w_conv1_0_load_2 [2/2] 2.39ns
.preheader1172:50  %w_conv1_0_load_2 = load i30* %w_conv1_0_addr_2, align 4

ST_5: tmp_15_1_cast_mid [1/1] 0.00ns (grouped into LUT with out node tmp_15_1_cast_mid2)
.preheader1172:82  %tmp_15_1_cast_mid = select i1 %tmp_24, i3 1, i3 %x_V_2

ST_5: tmp_15_2_cast_mid [1/1] 0.00ns (grouped into LUT with out node tmp_15_2_cast_mid2)
.preheader1172:83  %tmp_15_2_cast_mid = select i1 %tmp_24, i3 2, i3 %tmp_15_2

ST_5: x_V_2_mid1 [1/1] 0.80ns
.preheader1172:98  %x_V_2_mid1 = add i3 2, %t_V_5_mid

ST_5: tmp_15_1_cast_mid2 [1/1] 1.37ns (out node of the LUT)
.preheader1172:99  %tmp_15_1_cast_mid2 = select i1 %exitcond7_mid2, i3 %x_V_2_mid1, i3 %tmp_15_1_cast_mid

ST_5: tmp_15_1_cast_mid2_cast [1/1] 0.00ns
.preheader1172:100  %tmp_15_1_cast_mid2_cast = zext i3 %tmp_15_1_cast_mid2 to i6

ST_5: tmp_15_1_cast_cast_mid2_cast [1/1] 0.00ns
.preheader1172:101  %tmp_15_1_cast_cast_mid2_cast = zext i3 %tmp_15_1_cast_mid2 to i9

ST_5: tmp_15_2_mid1 [1/1] 0.80ns
.preheader1172:102  %tmp_15_2_mid1 = add i3 3, %t_V_5_mid

ST_5: tmp_15_2_cast_mid2 [1/1] 1.37ns (out node of the LUT)
.preheader1172:103  %tmp_15_2_cast_mid2 = select i1 %exitcond7_mid2, i3 %tmp_15_2_mid1, i3 %tmp_15_2_cast_mid

ST_5: tmp_15_2_cast_mid2_cast [1/1] 0.00ns
.preheader1172:104  %tmp_15_2_cast_mid2_cast = zext i3 %tmp_15_2_cast_mid2 to i6

ST_5: tmp_15_2_cast_cast_mid2_cast [1/1] 0.00ns
.preheader1172:105  %tmp_15_2_cast_cast_mid2_cast = zext i3 %tmp_15_2_cast_mid2 to i9

ST_5: newIndex6 [12/13] 3.38ns
.preheader1172:124  %newIndex6 = urem i9 %i_index_V, 200

ST_5: input_0_V_load_1 [1/2] 2.71ns
.preheader1172:142  %input_0_V_load_1 = load i32* %input_0_V_addr_1, align 4

ST_5: input_0_V_load_2 [1/2] 2.71ns
.preheader1172:154  %input_0_V_load_2 = load i32* %input_0_V_addr_2, align 4

ST_5: i_index_V_1 [1/1] 1.72ns
.preheader1172:161  %i_index_V_1 = add i9 %tmp1_cast19_cast, %tmp_15_1_cast_cast_mid2_cast

ST_5: newIndex2 [13/13] 3.38ns
.preheader1172:167  %newIndex2 = urem i9 %i_index_V_1, 200

ST_5: i_index_V_1_1 [1/1] 1.72ns
.preheader1172:184  %i_index_V_1_1 = add i6 %tmp1_0_1_cast, %tmp_15_1_cast_mid2_cast

ST_5: newIndex4 [1/1] 0.00ns
.preheader1172:185  %newIndex4 = zext i6 %i_index_V_1_1 to i64

ST_5: input_0_V_addr_4 [1/1] 0.00ns
.preheader1172:186  %input_0_V_addr_4 = getelementptr [200 x i32]* %input_0_V, i64 0, i64 %newIndex4

ST_5: input_0_V_load_4 [2/2] 2.71ns
.preheader1172:187  %input_0_V_load_4 = load i32* %input_0_V_addr_4, align 4

ST_5: i_index_V_1_2 [1/1] 1.72ns
.preheader1172:194  %i_index_V_1_2 = add i6 %tmp1_0_2_cast, %tmp_15_1_cast_mid2_cast

ST_5: newIndex5 [1/1] 0.00ns
.preheader1172:195  %newIndex5 = zext i6 %i_index_V_1_2 to i64

ST_5: input_0_V_addr_5 [1/1] 0.00ns
.preheader1172:196  %input_0_V_addr_5 = getelementptr [200 x i32]* %input_0_V, i64 0, i64 %newIndex5

ST_5: input_0_V_load_5 [2/2] 2.71ns
.preheader1172:197  %input_0_V_load_5 = load i32* %input_0_V_addr_5, align 4

ST_5: i_index_V_2 [1/1] 1.72ns
.preheader1172:204  %i_index_V_2 = add i9 %tmp1_cast19_cast, %tmp_15_2_cast_cast_mid2_cast

ST_5: i_index_V_2_1 [1/1] 1.72ns
.preheader1172:227  %i_index_V_2_1 = add i6 %tmp1_0_1_cast, %tmp_15_2_cast_mid2_cast

ST_5: i_index_V_2_2 [1/1] 1.72ns
.preheader1172:237  %i_index_V_2_2 = add i6 %tmp1_0_2_cast, %tmp_15_2_cast_mid2_cast


 <State 6>: 8.47ns
ST_6: OP2_V_0_1_mid2_cast [1/1] 0.00ns
.preheader1172:46  %OP2_V_0_1_mid2_cast = sext i30 %w_conv1_0_load_1 to i61

ST_6: w_conv1_0_load_2 [1/2] 2.39ns
.preheader1172:50  %w_conv1_0_load_2 = load i30* %w_conv1_0_addr_2, align 4

ST_6: OP2_V_0_2_mid2_cast [1/1] 0.00ns
.preheader1172:51  %OP2_V_0_2_mid2_cast = sext i30 %w_conv1_0_load_2 to i61

ST_6: OP2_V_1_1_mid2_v_v [1/1] 1.84ns
.preheader1172:57  %OP2_V_1_1_mid2_v_v = add i9 4, %OP2_V_cast_mid2_v_v

ST_6: OP2_V_1_1_mid2_v [1/1] 0.00ns
.preheader1172:58  %OP2_V_1_1_mid2_v = zext i9 %OP2_V_1_1_mid2_v_v to i64

ST_6: w_conv1_0_addr_4 [1/1] 0.00ns
.preheader1172:59  %w_conv1_0_addr_4 = getelementptr [4608 x i30]* @w_conv1_0, i64 0, i64 %OP2_V_1_1_mid2_v

ST_6: w_conv1_0_load_4 [2/2] 2.39ns
.preheader1172:60  %w_conv1_0_load_4 = load i30* %w_conv1_0_addr_4, align 4

ST_6: OP2_V_1_2_mid2_v_v [1/1] 1.84ns
.preheader1172:62  %OP2_V_1_2_mid2_v_v = add i9 7, %OP2_V_cast_mid2_v_v

ST_6: OP2_V_1_2_mid2_v [1/1] 0.00ns
.preheader1172:63  %OP2_V_1_2_mid2_v = zext i9 %OP2_V_1_2_mid2_v_v to i64

ST_6: w_conv1_0_addr_5 [1/1] 0.00ns
.preheader1172:64  %w_conv1_0_addr_5 = getelementptr [4608 x i30]* @w_conv1_0, i64 0, i64 %OP2_V_1_2_mid2_v

ST_6: w_conv1_0_load_5 [2/2] 2.39ns
.preheader1172:65  %w_conv1_0_load_5 = load i30* %w_conv1_0_addr_5, align 4

ST_6: newIndex6 [11/13] 3.38ns
.preheader1172:124  %newIndex6 = urem i9 %i_index_V, 200

ST_6: OP1_V_0_1_cast [1/1] 0.00ns
.preheader1172:143  %OP1_V_0_1_cast = sext i32 %input_0_V_load_1 to i61

ST_6: p_Val2_7_0_1 [6/6] 6.08ns
.preheader1172:144  %p_Val2_7_0_1 = mul i61 %OP1_V_0_1_cast, %OP2_V_0_1_mid2_cast

ST_6: OP1_V_0_2_cast [1/1] 0.00ns
.preheader1172:155  %OP1_V_0_2_cast = sext i32 %input_0_V_load_2 to i61

ST_6: p_Val2_7_0_2 [6/6] 6.08ns
.preheader1172:156  %p_Val2_7_0_2 = mul i61 %OP1_V_0_2_cast, %OP2_V_0_2_mid2_cast

ST_6: newIndex2 [12/13] 3.38ns
.preheader1172:167  %newIndex2 = urem i9 %i_index_V_1, 200

ST_6: input_0_V_load_4 [1/2] 2.71ns
.preheader1172:187  %input_0_V_load_4 = load i32* %input_0_V_addr_4, align 4

ST_6: input_0_V_load_5 [1/2] 2.71ns
.preheader1172:197  %input_0_V_load_5 = load i32* %input_0_V_addr_5, align 4

ST_6: newIndex9 [13/13] 3.38ns
.preheader1172:210  %newIndex9 = urem i9 %i_index_V_2, 200

ST_6: newIndex11 [1/1] 0.00ns
.preheader1172:228  %newIndex11 = zext i6 %i_index_V_2_1 to i64

ST_6: input_0_V_addr_7 [1/1] 0.00ns
.preheader1172:229  %input_0_V_addr_7 = getelementptr [200 x i32]* %input_0_V, i64 0, i64 %newIndex11

ST_6: input_0_V_load_7 [2/2] 2.71ns
.preheader1172:230  %input_0_V_load_7 = load i32* %input_0_V_addr_7, align 4


 <State 7>: 8.47ns
ST_7: w_conv1_0_load_4 [1/2] 2.39ns
.preheader1172:60  %w_conv1_0_load_4 = load i30* %w_conv1_0_addr_4, align 4

ST_7: OP2_V_1_1_mid2_cast [1/1] 0.00ns
.preheader1172:61  %OP2_V_1_1_mid2_cast = sext i30 %w_conv1_0_load_4 to i61

ST_7: w_conv1_0_load_5 [1/2] 2.39ns
.preheader1172:65  %w_conv1_0_load_5 = load i30* %w_conv1_0_addr_5, align 4

ST_7: OP2_V_1_2_mid2_cast [1/1] 0.00ns
.preheader1172:66  %OP2_V_1_2_mid2_cast = sext i30 %w_conv1_0_load_5 to i61

ST_7: OP2_V_2_1_mid2_v_v [1/1] 1.84ns
.preheader1172:72  %OP2_V_2_1_mid2_v_v = add i9 5, %OP2_V_cast_mid2_v_v

ST_7: OP2_V_2_1_mid2_v [1/1] 0.00ns
.preheader1172:73  %OP2_V_2_1_mid2_v = zext i9 %OP2_V_2_1_mid2_v_v to i64

ST_7: w_conv1_0_addr_7 [1/1] 0.00ns
.preheader1172:74  %w_conv1_0_addr_7 = getelementptr [4608 x i30]* @w_conv1_0, i64 0, i64 %OP2_V_2_1_mid2_v

ST_7: w_conv1_0_load_7 [2/2] 2.39ns
.preheader1172:75  %w_conv1_0_load_7 = load i30* %w_conv1_0_addr_7, align 4

ST_7: newIndex6 [10/13] 3.38ns
.preheader1172:124  %newIndex6 = urem i9 %i_index_V, 200

ST_7: p_Val2_7_0_1 [5/6] 6.08ns
.preheader1172:144  %p_Val2_7_0_1 = mul i61 %OP1_V_0_1_cast, %OP2_V_0_1_mid2_cast

ST_7: p_Val2_7_0_2 [5/6] 6.08ns
.preheader1172:156  %p_Val2_7_0_2 = mul i61 %OP1_V_0_2_cast, %OP2_V_0_2_mid2_cast

ST_7: newIndex2 [11/13] 3.38ns
.preheader1172:167  %newIndex2 = urem i9 %i_index_V_1, 200

ST_7: OP1_V_1_1_cast [1/1] 0.00ns
.preheader1172:188  %OP1_V_1_1_cast = sext i32 %input_0_V_load_4 to i61

ST_7: p_Val2_7_1_1 [6/6] 6.08ns
.preheader1172:189  %p_Val2_7_1_1 = mul i61 %OP1_V_1_1_cast, %OP2_V_1_1_mid2_cast

ST_7: OP1_V_1_2_cast [1/1] 0.00ns
.preheader1172:198  %OP1_V_1_2_cast = sext i32 %input_0_V_load_5 to i61

ST_7: p_Val2_7_1_2 [6/6] 6.08ns
.preheader1172:199  %p_Val2_7_1_2 = mul i61 %OP1_V_1_2_cast, %OP2_V_1_2_mid2_cast

ST_7: newIndex9 [12/13] 3.38ns
.preheader1172:210  %newIndex9 = urem i9 %i_index_V_2, 200

ST_7: input_0_V_load_7 [1/2] 2.71ns
.preheader1172:230  %input_0_V_load_7 = load i32* %input_0_V_addr_7, align 4

ST_7: newIndex7 [1/1] 0.00ns
.preheader1172:238  %newIndex7 = zext i6 %i_index_V_2_2 to i64

ST_7: input_0_V_addr_8 [1/1] 0.00ns
.preheader1172:239  %input_0_V_addr_8 = getelementptr [200 x i32]* %input_0_V, i64 0, i64 %newIndex7

ST_7: input_0_V_load_8 [2/2] 2.71ns
.preheader1172:240  %input_0_V_load_8 = load i32* %input_0_V_addr_8, align 4

ST_7: y_V_1 [1/1] 0.80ns
.preheader1172:258  %y_V_1 = add i3 1, %t_V_7_mid2


 <State 8>: 8.47ns
ST_8: w_conv1_0_load_7 [1/2] 2.39ns
.preheader1172:75  %w_conv1_0_load_7 = load i30* %w_conv1_0_addr_7, align 4

ST_8: OP2_V_2_1_mid2_cast [1/1] 0.00ns
.preheader1172:76  %OP2_V_2_1_mid2_cast = sext i30 %w_conv1_0_load_7 to i61

ST_8: OP2_V_2_2_mid2_v_v [1/1] 1.84ns
.preheader1172:77  %OP2_V_2_2_mid2_v_v = add i9 8, %OP2_V_cast_mid2_v_v

ST_8: OP2_V_2_2_mid2_v [1/1] 0.00ns
.preheader1172:78  %OP2_V_2_2_mid2_v = zext i9 %OP2_V_2_2_mid2_v_v to i64

ST_8: w_conv1_0_addr_8 [1/1] 0.00ns
.preheader1172:79  %w_conv1_0_addr_8 = getelementptr [4608 x i30]* @w_conv1_0, i64 0, i64 %OP2_V_2_2_mid2_v

ST_8: w_conv1_0_load_8 [2/2] 2.39ns
.preheader1172:80  %w_conv1_0_load_8 = load i30* %w_conv1_0_addr_8, align 4

ST_8: newIndex6 [9/13] 3.38ns
.preheader1172:124  %newIndex6 = urem i9 %i_index_V, 200

ST_8: p_Val2_7_0_1 [4/6] 6.08ns
.preheader1172:144  %p_Val2_7_0_1 = mul i61 %OP1_V_0_1_cast, %OP2_V_0_1_mid2_cast

ST_8: p_Val2_7_0_2 [4/6] 6.08ns
.preheader1172:156  %p_Val2_7_0_2 = mul i61 %OP1_V_0_2_cast, %OP2_V_0_2_mid2_cast

ST_8: newIndex2 [10/13] 3.38ns
.preheader1172:167  %newIndex2 = urem i9 %i_index_V_1, 200

ST_8: p_Val2_7_1_1 [5/6] 6.08ns
.preheader1172:189  %p_Val2_7_1_1 = mul i61 %OP1_V_1_1_cast, %OP2_V_1_1_mid2_cast

ST_8: p_Val2_7_1_2 [5/6] 6.08ns
.preheader1172:199  %p_Val2_7_1_2 = mul i61 %OP1_V_1_2_cast, %OP2_V_1_2_mid2_cast

ST_8: newIndex9 [11/13] 3.38ns
.preheader1172:210  %newIndex9 = urem i9 %i_index_V_2, 200

ST_8: OP1_V_2_1_cast [1/1] 0.00ns
.preheader1172:231  %OP1_V_2_1_cast = sext i32 %input_0_V_load_7 to i61

ST_8: p_Val2_7_2_1 [6/6] 6.08ns
.preheader1172:232  %p_Val2_7_2_1 = mul i61 %OP1_V_2_1_cast, %OP2_V_2_1_mid2_cast

ST_8: input_0_V_load_8 [1/2] 2.71ns
.preheader1172:240  %input_0_V_load_8 = load i32* %input_0_V_addr_8, align 4


 <State 9>: 8.47ns
ST_9: w_conv1_0_load_8 [1/2] 2.39ns
.preheader1172:80  %w_conv1_0_load_8 = load i30* %w_conv1_0_addr_8, align 4

ST_9: OP2_V_2_2_mid2_cast [1/1] 0.00ns
.preheader1172:81  %OP2_V_2_2_mid2_cast = sext i30 %w_conv1_0_load_8 to i61

ST_9: newIndex6 [8/13] 3.38ns
.preheader1172:124  %newIndex6 = urem i9 %i_index_V, 200

ST_9: p_Val2_7_0_1 [3/6] 6.08ns
.preheader1172:144  %p_Val2_7_0_1 = mul i61 %OP1_V_0_1_cast, %OP2_V_0_1_mid2_cast

ST_9: p_Val2_7_0_2 [3/6] 6.08ns
.preheader1172:156  %p_Val2_7_0_2 = mul i61 %OP1_V_0_2_cast, %OP2_V_0_2_mid2_cast

ST_9: newIndex2 [9/13] 3.38ns
.preheader1172:167  %newIndex2 = urem i9 %i_index_V_1, 200

ST_9: p_Val2_7_1_1 [4/6] 6.08ns
.preheader1172:189  %p_Val2_7_1_1 = mul i61 %OP1_V_1_1_cast, %OP2_V_1_1_mid2_cast

ST_9: p_Val2_7_1_2 [4/6] 6.08ns
.preheader1172:199  %p_Val2_7_1_2 = mul i61 %OP1_V_1_2_cast, %OP2_V_1_2_mid2_cast

ST_9: newIndex9 [10/13] 3.38ns
.preheader1172:210  %newIndex9 = urem i9 %i_index_V_2, 200

ST_9: p_Val2_7_2_1 [5/6] 6.08ns
.preheader1172:232  %p_Val2_7_2_1 = mul i61 %OP1_V_2_1_cast, %OP2_V_2_1_mid2_cast

ST_9: OP1_V_2_2_cast [1/1] 0.00ns
.preheader1172:241  %OP1_V_2_2_cast = sext i32 %input_0_V_load_8 to i61

ST_9: p_Val2_7_2_2 [6/6] 6.08ns
.preheader1172:242  %p_Val2_7_2_2 = mul i61 %OP1_V_2_2_cast, %OP2_V_2_2_mid2_cast


 <State 10>: 6.08ns
ST_10: newIndex6 [7/13] 3.38ns
.preheader1172:124  %newIndex6 = urem i9 %i_index_V, 200

ST_10: p_Val2_7_0_1 [2/6] 6.08ns
.preheader1172:144  %p_Val2_7_0_1 = mul i61 %OP1_V_0_1_cast, %OP2_V_0_1_mid2_cast

ST_10: p_Val2_7_0_2 [2/6] 6.08ns
.preheader1172:156  %p_Val2_7_0_2 = mul i61 %OP1_V_0_2_cast, %OP2_V_0_2_mid2_cast

ST_10: newIndex2 [8/13] 3.38ns
.preheader1172:167  %newIndex2 = urem i9 %i_index_V_1, 200

ST_10: p_Val2_7_1_1 [3/6] 6.08ns
.preheader1172:189  %p_Val2_7_1_1 = mul i61 %OP1_V_1_1_cast, %OP2_V_1_1_mid2_cast

ST_10: p_Val2_7_1_2 [3/6] 6.08ns
.preheader1172:199  %p_Val2_7_1_2 = mul i61 %OP1_V_1_2_cast, %OP2_V_1_2_mid2_cast

ST_10: newIndex9 [9/13] 3.38ns
.preheader1172:210  %newIndex9 = urem i9 %i_index_V_2, 200

ST_10: p_Val2_7_2_1 [4/6] 6.08ns
.preheader1172:232  %p_Val2_7_2_1 = mul i61 %OP1_V_2_1_cast, %OP2_V_2_1_mid2_cast

ST_10: p_Val2_7_2_2 [5/6] 6.08ns
.preheader1172:242  %p_Val2_7_2_2 = mul i61 %OP1_V_2_2_cast, %OP2_V_2_2_mid2_cast


 <State 11>: 6.08ns
ST_11: newIndex6 [6/13] 3.38ns
.preheader1172:124  %newIndex6 = urem i9 %i_index_V, 200

ST_11: p_Val2_7_0_1 [1/6] 6.08ns
.preheader1172:144  %p_Val2_7_0_1 = mul i61 %OP1_V_0_1_cast, %OP2_V_0_1_mid2_cast

ST_11: p_Val2_7_0_2 [1/6] 6.08ns
.preheader1172:156  %p_Val2_7_0_2 = mul i61 %OP1_V_0_2_cast, %OP2_V_0_2_mid2_cast

ST_11: newIndex2 [7/13] 3.38ns
.preheader1172:167  %newIndex2 = urem i9 %i_index_V_1, 200

ST_11: p_Val2_7_1_1 [2/6] 6.08ns
.preheader1172:189  %p_Val2_7_1_1 = mul i61 %OP1_V_1_1_cast, %OP2_V_1_1_mid2_cast

ST_11: p_Val2_7_1_2 [2/6] 6.08ns
.preheader1172:199  %p_Val2_7_1_2 = mul i61 %OP1_V_1_2_cast, %OP2_V_1_2_mid2_cast

ST_11: newIndex9 [8/13] 3.38ns
.preheader1172:210  %newIndex9 = urem i9 %i_index_V_2, 200

ST_11: p_Val2_7_2_1 [3/6] 6.08ns
.preheader1172:232  %p_Val2_7_2_1 = mul i61 %OP1_V_2_1_cast, %OP2_V_2_1_mid2_cast

ST_11: p_Val2_7_2_2 [4/6] 6.08ns
.preheader1172:242  %p_Val2_7_2_2 = mul i61 %OP1_V_2_2_cast, %OP2_V_2_2_mid2_cast


 <State 12>: 6.08ns
ST_12: newIndex6 [5/13] 3.38ns
.preheader1172:124  %newIndex6 = urem i9 %i_index_V, 200

ST_12: newIndex2 [6/13] 3.38ns
.preheader1172:167  %newIndex2 = urem i9 %i_index_V_1, 200

ST_12: p_Val2_7_1_1 [1/6] 6.08ns
.preheader1172:189  %p_Val2_7_1_1 = mul i61 %OP1_V_1_1_cast, %OP2_V_1_1_mid2_cast

ST_12: p_Val2_7_1_2 [1/6] 6.08ns
.preheader1172:199  %p_Val2_7_1_2 = mul i61 %OP1_V_1_2_cast, %OP2_V_1_2_mid2_cast

ST_12: newIndex9 [7/13] 3.38ns
.preheader1172:210  %newIndex9 = urem i9 %i_index_V_2, 200

ST_12: p_Val2_7_2_1 [2/6] 6.08ns
.preheader1172:232  %p_Val2_7_2_1 = mul i61 %OP1_V_2_1_cast, %OP2_V_2_1_mid2_cast

ST_12: p_Val2_7_2_2 [3/6] 6.08ns
.preheader1172:242  %p_Val2_7_2_2 = mul i61 %OP1_V_2_2_cast, %OP2_V_2_2_mid2_cast


 <State 13>: 6.08ns
ST_13: newIndex6 [4/13] 3.38ns
.preheader1172:124  %newIndex6 = urem i9 %i_index_V, 200

ST_13: newIndex2 [5/13] 3.38ns
.preheader1172:167  %newIndex2 = urem i9 %i_index_V_1, 200

ST_13: newIndex9 [6/13] 3.38ns
.preheader1172:210  %newIndex9 = urem i9 %i_index_V_2, 200

ST_13: p_Val2_7_2_1 [1/6] 6.08ns
.preheader1172:232  %p_Val2_7_2_1 = mul i61 %OP1_V_2_1_cast, %OP2_V_2_1_mid2_cast

ST_13: p_Val2_7_2_2 [2/6] 6.08ns
.preheader1172:242  %p_Val2_7_2_2 = mul i61 %OP1_V_2_2_cast, %OP2_V_2_2_mid2_cast


 <State 14>: 6.08ns
ST_14: OP2_V_cast_mid2_v [1/1] 0.00ns
.preheader1172:38  %OP2_V_cast_mid2_v = zext i9 %OP2_V_cast_mid2_v_v to i64

ST_14: w_conv1_0_addr [1/1] 0.00ns
.preheader1172:39  %w_conv1_0_addr = getelementptr [4608 x i30]* @w_conv1_0, i64 0, i64 %OP2_V_cast_mid2_v

ST_14: w_conv1_0_load [2/2] 2.39ns
.preheader1172:40  %w_conv1_0_load = load i30* %w_conv1_0_addr, align 4

ST_14: newIndex6 [3/13] 3.38ns
.preheader1172:124  %newIndex6 = urem i9 %i_index_V, 200

ST_14: newIndex2 [4/13] 3.38ns
.preheader1172:167  %newIndex2 = urem i9 %i_index_V_1, 200

ST_14: newIndex9 [5/13] 3.38ns
.preheader1172:210  %newIndex9 = urem i9 %i_index_V_2, 200

ST_14: p_Val2_7_2_2 [1/6] 6.08ns
.preheader1172:242  %p_Val2_7_2_2 = mul i61 %OP1_V_2_2_cast, %OP2_V_2_2_mid2_cast


 <State 15>: 6.38ns
ST_15: w_conv1_0_load [1/2] 2.39ns
.preheader1172:40  %w_conv1_0_load = load i30* %w_conv1_0_addr, align 4

ST_15: OP2_V_1_mid2_v_v [1/1] 1.84ns
.preheader1172:52  %OP2_V_1_mid2_v_v = add i9 1, %OP2_V_cast_mid2_v_v

ST_15: OP2_V_1_mid2_v [1/1] 0.00ns
.preheader1172:53  %OP2_V_1_mid2_v = zext i9 %OP2_V_1_mid2_v_v to i64

ST_15: w_conv1_0_addr_3 [1/1] 0.00ns
.preheader1172:54  %w_conv1_0_addr_3 = getelementptr [4608 x i30]* @w_conv1_0, i64 0, i64 %OP2_V_1_mid2_v

ST_15: w_conv1_0_load_3 [2/2] 2.39ns
.preheader1172:55  %w_conv1_0_load_3 = load i30* %w_conv1_0_addr_3, align 4

ST_15: zext3_cast [1/1] 0.00ns
.preheader1172:119  %zext3_cast = zext i9 %i_index_V to i20

ST_15: mul3 [1/1] 6.38ns
.preheader1172:120  %mul3 = mul i20 656, %zext3_cast

ST_15: tmp_34 [1/1] 0.00ns
.preheader1172:121  %tmp_34 = call i3 @_ssdm_op_PartSelect.i3.i20.i32.i32(i20 %mul3, i32 17, i32 19)

ST_15: newIndex6 [2/13] 3.38ns
.preheader1172:124  %newIndex6 = urem i9 %i_index_V, 200

ST_15: newIndex2 [3/13] 3.38ns
.preheader1172:167  %newIndex2 = urem i9 %i_index_V_1, 200

ST_15: newIndex9 [4/13] 3.38ns
.preheader1172:210  %newIndex9 = urem i9 %i_index_V_2, 200


 <State 16>: 6.38ns
ST_16: w_conv1_0_load_3 [1/2] 2.39ns
.preheader1172:55  %w_conv1_0_load_3 = load i30* %w_conv1_0_addr_3, align 4

ST_16: newIndex6 [1/13] 3.38ns
.preheader1172:124  %newIndex6 = urem i9 %i_index_V, 200

ST_16: newIndex8 [1/1] 0.00ns
.preheader1172:125  %newIndex8 = zext i9 %newIndex6 to i64

ST_16: input_0_V_addr [1/1] 0.00ns
.preheader1172:126  %input_0_V_addr = getelementptr [200 x i32]* %input_0_V, i64 0, i64 %newIndex8

ST_16: input_0_V_load [2/2] 2.71ns
.preheader1172:127  %input_0_V_load = load i32* %input_0_V_addr, align 4

ST_16: input_1_V_addr [1/1] 0.00ns
.preheader1172:128  %input_1_V_addr = getelementptr [200 x i32]* %input_1_V, i64 0, i64 %newIndex8

ST_16: input_1_V_load [2/2] 2.71ns
.preheader1172:129  %input_1_V_load = load i32* %input_1_V_addr, align 4

ST_16: input_2_V_addr [1/1] 0.00ns
.preheader1172:130  %input_2_V_addr = getelementptr [200 x i32]* %input_2_V, i64 0, i64 %newIndex8

ST_16: input_2_V_load [2/2] 2.71ns
.preheader1172:131  %input_2_V_load = load i32* %input_2_V_addr, align 4

ST_16: input_3_V_addr [1/1] 0.00ns
.preheader1172:132  %input_3_V_addr = getelementptr [200 x i32]* %input_3_V, i64 0, i64 %newIndex8

ST_16: input_3_V_load [2/2] 2.71ns
.preheader1172:133  %input_3_V_load = load i32* %input_3_V_addr, align 4

ST_16: zext4_cast [1/1] 0.00ns
.preheader1172:162  %zext4_cast = zext i9 %i_index_V_1 to i20

ST_16: mul4 [1/1] 6.38ns
.preheader1172:163  %mul4 = mul i20 656, %zext4_cast

ST_16: tmp_38 [1/1] 0.00ns
.preheader1172:164  %tmp_38 = call i3 @_ssdm_op_PartSelect.i3.i20.i32.i32(i20 %mul4, i32 17, i32 19)

ST_16: newIndex2 [2/13] 3.38ns
.preheader1172:167  %newIndex2 = urem i9 %i_index_V_1, 200

ST_16: newIndex9 [3/13] 3.38ns
.preheader1172:210  %newIndex9 = urem i9 %i_index_V_2, 200


 <State 17>: 6.38ns
ST_17: OP2_V_2_mid2_v_v [1/1] 1.84ns
.preheader1172:67  %OP2_V_2_mid2_v_v = add i9 2, %OP2_V_cast_mid2_v_v

ST_17: OP2_V_2_mid2_v [1/1] 0.00ns
.preheader1172:68  %OP2_V_2_mid2_v = zext i9 %OP2_V_2_mid2_v_v to i64

ST_17: w_conv1_0_addr_6 [1/1] 0.00ns
.preheader1172:69  %w_conv1_0_addr_6 = getelementptr [4608 x i30]* @w_conv1_0, i64 0, i64 %OP2_V_2_mid2_v

ST_17: w_conv1_0_load_6 [2/2] 2.39ns
.preheader1172:70  %w_conv1_0_load_6 = load i30* %w_conv1_0_addr_6, align 4

ST_17: arrayNo2 [1/1] 0.00ns
.preheader1172:122  %arrayNo2 = sext i3 %tmp_34 to i9

ST_17: arrayNo2_cast [1/1] 0.00ns
.preheader1172:123  %arrayNo2_cast = zext i9 %arrayNo2 to i32

ST_17: input_0_V_load [1/2] 2.71ns
.preheader1172:127  %input_0_V_load = load i32* %input_0_V_addr, align 4

ST_17: input_1_V_load [1/2] 2.71ns
.preheader1172:129  %input_1_V_load = load i32* %input_1_V_addr, align 4

ST_17: input_2_V_load [1/2] 2.71ns
.preheader1172:131  %input_2_V_load = load i32* %input_2_V_addr, align 4

ST_17: input_3_V_load [1/2] 2.71ns
.preheader1172:133  %input_3_V_load = load i32* %input_3_V_addr, align 4

ST_17: tmp_s [1/1] 1.57ns
.preheader1172:134  %tmp_s = call i32 @_ssdm_op_Mux.ap_auto.4i32.i32(i32 %input_0_V_load, i32 %input_1_V_load, i32 %input_2_V_load, i32 %input_3_V_load, i32 %arrayNo2_cast)

ST_17: newIndex2 [1/13] 3.38ns
.preheader1172:167  %newIndex2 = urem i9 %i_index_V_1, 200

ST_17: newIndex3 [1/1] 0.00ns
.preheader1172:168  %newIndex3 = zext i9 %newIndex2 to i64

ST_17: input_0_V_addr_3 [1/1] 0.00ns
.preheader1172:169  %input_0_V_addr_3 = getelementptr [200 x i32]* %input_0_V, i64 0, i64 %newIndex3

ST_17: input_0_V_load_3 [2/2] 2.71ns
.preheader1172:170  %input_0_V_load_3 = load i32* %input_0_V_addr_3, align 4

ST_17: input_1_V_addr_1 [1/1] 0.00ns
.preheader1172:171  %input_1_V_addr_1 = getelementptr [200 x i32]* %input_1_V, i64 0, i64 %newIndex3

ST_17: input_1_V_load_1 [2/2] 2.71ns
.preheader1172:172  %input_1_V_load_1 = load i32* %input_1_V_addr_1, align 4

ST_17: input_2_V_addr_1 [1/1] 0.00ns
.preheader1172:173  %input_2_V_addr_1 = getelementptr [200 x i32]* %input_2_V, i64 0, i64 %newIndex3

ST_17: input_2_V_load_1 [2/2] 2.71ns
.preheader1172:174  %input_2_V_load_1 = load i32* %input_2_V_addr_1, align 4

ST_17: input_3_V_addr_1 [1/1] 0.00ns
.preheader1172:175  %input_3_V_addr_1 = getelementptr [200 x i32]* %input_3_V, i64 0, i64 %newIndex3

ST_17: input_3_V_load_1 [2/2] 2.71ns
.preheader1172:176  %input_3_V_load_1 = load i32* %input_3_V_addr_1, align 4

ST_17: zext_cast [1/1] 0.00ns
.preheader1172:205  %zext_cast = zext i9 %i_index_V_2 to i20

ST_17: mul [1/1] 6.38ns
.preheader1172:206  %mul = mul i20 656, %zext_cast

ST_17: tmp_39 [1/1] 0.00ns
.preheader1172:207  %tmp_39 = call i3 @_ssdm_op_PartSelect.i3.i20.i32.i32(i20 %mul, i32 17, i32 19)

ST_17: newIndex9 [2/13] 3.38ns
.preheader1172:210  %newIndex9 = urem i9 %i_index_V_2, 200


 <State 18>: 6.09ns
ST_18: OP2_V_cast_mid2_cast [1/1] 0.00ns
.preheader1172:41  %OP2_V_cast_mid2_cast = sext i30 %w_conv1_0_load to i61

ST_18: w_conv1_0_load_6 [1/2] 2.39ns
.preheader1172:70  %w_conv1_0_load_6 = load i30* %w_conv1_0_addr_6, align 4

ST_18: OP1_V_cast_cast [1/1] 0.00ns
.preheader1172:135  %OP1_V_cast_cast = sext i32 %tmp_s to i61

ST_18: p_Val2_7 [6/6] 6.08ns
.preheader1172:136  %p_Val2_7 = mul i61 %OP1_V_cast_cast, %OP2_V_cast_mid2_cast

ST_18: arrayNo8 [1/1] 0.00ns
.preheader1172:165  %arrayNo8 = sext i3 %tmp_38 to i9

ST_18: arrayNo8_cast [1/1] 0.00ns
.preheader1172:166  %arrayNo8_cast = zext i9 %arrayNo8 to i32

ST_18: input_0_V_load_3 [1/2] 2.71ns
.preheader1172:170  %input_0_V_load_3 = load i32* %input_0_V_addr_3, align 4

ST_18: input_1_V_load_1 [1/2] 2.71ns
.preheader1172:172  %input_1_V_load_1 = load i32* %input_1_V_addr_1, align 4

ST_18: input_2_V_load_1 [1/2] 2.71ns
.preheader1172:174  %input_2_V_load_1 = load i32* %input_2_V_addr_1, align 4

ST_18: input_3_V_load_1 [1/2] 2.71ns
.preheader1172:176  %input_3_V_load_1 = load i32* %input_3_V_addr_1, align 4

ST_18: tmp_10 [1/1] 1.57ns
.preheader1172:177  %tmp_10 = call i32 @_ssdm_op_Mux.ap_auto.4i32.i32(i32 %input_0_V_load_3, i32 %input_1_V_load_1, i32 %input_2_V_load_1, i32 %input_3_V_load_1, i32 %arrayNo8_cast)

ST_18: newIndex9 [1/13] 3.38ns
.preheader1172:210  %newIndex9 = urem i9 %i_index_V_2, 200

ST_18: newIndex10 [1/1] 0.00ns
.preheader1172:211  %newIndex10 = zext i9 %newIndex9 to i64

ST_18: input_0_V_addr_6 [1/1] 0.00ns
.preheader1172:212  %input_0_V_addr_6 = getelementptr [200 x i32]* %input_0_V, i64 0, i64 %newIndex10

ST_18: input_0_V_load_6 [2/2] 2.71ns
.preheader1172:213  %input_0_V_load_6 = load i32* %input_0_V_addr_6, align 4

ST_18: input_1_V_addr_2 [1/1] 0.00ns
.preheader1172:214  %input_1_V_addr_2 = getelementptr [200 x i32]* %input_1_V, i64 0, i64 %newIndex10

ST_18: input_1_V_load_2 [2/2] 2.71ns
.preheader1172:215  %input_1_V_load_2 = load i32* %input_1_V_addr_2, align 4

ST_18: input_2_V_addr_2 [1/1] 0.00ns
.preheader1172:216  %input_2_V_addr_2 = getelementptr [200 x i32]* %input_2_V, i64 0, i64 %newIndex10

ST_18: input_2_V_load_2 [2/2] 2.71ns
.preheader1172:217  %input_2_V_load_2 = load i32* %input_2_V_addr_2, align 4

ST_18: input_3_V_addr_2 [1/1] 0.00ns
.preheader1172:218  %input_3_V_addr_2 = getelementptr [200 x i32]* %input_3_V, i64 0, i64 %newIndex10

ST_18: input_3_V_load_2 [2/2] 2.71ns
.preheader1172:219  %input_3_V_load_2 = load i32* %input_3_V_addr_2, align 4


 <State 19>: 6.08ns
ST_19: OP2_V_1_mid2_cast [1/1] 0.00ns
.preheader1172:56  %OP2_V_1_mid2_cast = sext i30 %w_conv1_0_load_3 to i61

ST_19: p_Val2_7 [5/6] 6.08ns
.preheader1172:136  %p_Val2_7 = mul i61 %OP1_V_cast_cast, %OP2_V_cast_mid2_cast

ST_19: OP1_V_1_cast [1/1] 0.00ns
.preheader1172:178  %OP1_V_1_cast = sext i32 %tmp_10 to i61

ST_19: p_Val2_7_1 [6/6] 6.08ns
.preheader1172:179  %p_Val2_7_1 = mul i61 %OP1_V_1_cast, %OP2_V_1_mid2_cast

ST_19: arrayNo [1/1] 0.00ns
.preheader1172:208  %arrayNo = sext i3 %tmp_39 to i9

ST_19: arrayNo15_cast [1/1] 0.00ns
.preheader1172:209  %arrayNo15_cast = zext i9 %arrayNo to i32

ST_19: input_0_V_load_6 [1/2] 2.71ns
.preheader1172:213  %input_0_V_load_6 = load i32* %input_0_V_addr_6, align 4

ST_19: input_1_V_load_2 [1/2] 2.71ns
.preheader1172:215  %input_1_V_load_2 = load i32* %input_1_V_addr_2, align 4

ST_19: input_2_V_load_2 [1/2] 2.71ns
.preheader1172:217  %input_2_V_load_2 = load i32* %input_2_V_addr_2, align 4

ST_19: input_3_V_load_2 [1/2] 2.71ns
.preheader1172:219  %input_3_V_load_2 = load i32* %input_3_V_addr_2, align 4

ST_19: tmp_11 [1/1] 1.57ns
.preheader1172:220  %tmp_11 = call i32 @_ssdm_op_Mux.ap_auto.4i32.i32(i32 %input_0_V_load_6, i32 %input_1_V_load_2, i32 %input_2_V_load_2, i32 %input_3_V_load_2, i32 %arrayNo15_cast)


 <State 20>: 6.08ns
ST_20: OP2_V_2_mid2_cast [1/1] 0.00ns
.preheader1172:71  %OP2_V_2_mid2_cast = sext i30 %w_conv1_0_load_6 to i61

ST_20: p_Val2_7 [4/6] 6.08ns
.preheader1172:136  %p_Val2_7 = mul i61 %OP1_V_cast_cast, %OP2_V_cast_mid2_cast

ST_20: p_Val2_7_1 [5/6] 6.08ns
.preheader1172:179  %p_Val2_7_1 = mul i61 %OP1_V_1_cast, %OP2_V_1_mid2_cast

ST_20: OP1_V_2_cast [1/1] 0.00ns
.preheader1172:221  %OP1_V_2_cast = sext i32 %tmp_11 to i61

ST_20: p_Val2_7_2 [6/6] 6.08ns
.preheader1172:222  %p_Val2_7_2 = mul i61 %OP1_V_2_cast, %OP2_V_2_mid2_cast


 <State 21>: 6.08ns
ST_21: p_Val2_7 [3/6] 6.08ns
.preheader1172:136  %p_Val2_7 = mul i61 %OP1_V_cast_cast, %OP2_V_cast_mid2_cast

ST_21: p_Val2_7_1 [4/6] 6.08ns
.preheader1172:179  %p_Val2_7_1 = mul i61 %OP1_V_1_cast, %OP2_V_1_mid2_cast

ST_21: p_Val2_7_2 [5/6] 6.08ns
.preheader1172:222  %p_Val2_7_2 = mul i61 %OP1_V_2_cast, %OP2_V_2_mid2_cast


 <State 22>: 6.08ns
ST_22: p_Val2_7 [2/6] 6.08ns
.preheader1172:136  %p_Val2_7 = mul i61 %OP1_V_cast_cast, %OP2_V_cast_mid2_cast

ST_22: p_Val2_7_1 [3/6] 6.08ns
.preheader1172:179  %p_Val2_7_1 = mul i61 %OP1_V_1_cast, %OP2_V_1_mid2_cast

ST_22: p_Val2_7_2 [4/6] 6.08ns
.preheader1172:222  %p_Val2_7_2 = mul i61 %OP1_V_2_cast, %OP2_V_2_mid2_cast


 <State 23>: 8.22ns
ST_23: t_V_1_cast [1/1] 0.00ns
.preheader1169:7  %t_V_1_cast = zext i6 %t_V_1 to i10

ST_23: p_1 [1/1] 6.38ns
.preheader1169:8  %p_1 = mul i10 25, %t_V_1_cast

ST_23: t_V_5_cast [1/1] 0.00ns
.preheader1169:16  %t_V_5_cast = zext i3 %t_V_5 to i10

ST_23: tmp4 [1/1] 1.84ns
.preheader1169:19  %tmp4 = add i10 %p_1, %t_V_5_cast

ST_23: stg_372 [1/1] 1.57ns
.preheader1169:22  br i1 %exitcond_flatten4, label %.preheader1167, label %.preheader1172

ST_23: p_Val2_7 [1/6] 6.08ns
.preheader1172:136  %p_Val2_7 = mul i61 %OP1_V_cast_cast, %OP2_V_cast_mid2_cast

ST_23: tmp_36 [1/1] 0.00ns
.preheader1172:146  %tmp_36 = call i31 @_ssdm_op_PartSelect.i31.i61.i32.i32(i61 %p_Val2_7, i32 30, i32 60)

ST_23: p_Val2_7_1 [2/6] 6.08ns
.preheader1172:179  %p_Val2_7_1 = mul i61 %OP1_V_1_cast, %OP2_V_1_mid2_cast

ST_23: p_Val2_7_2 [3/6] 6.08ns
.preheader1172:222  %p_Val2_7_2 = mul i61 %OP1_V_2_cast, %OP2_V_2_mid2_cast


 <State 24>: 6.80ns
ST_24: t_V_1_cast_mid1 [1/1] 0.00ns
.preheader1172:6  %t_V_1_cast_mid1 = zext i6 %n_V to i10

ST_24: p_1_mid1 [1/1] 6.38ns
.preheader1172:7  %p_1_mid1 = mul i10 25, %t_V_1_cast_mid1

ST_24: p_Val2_7_0_1_cast [1/1] 0.00ns
.preheader1172:145  %p_Val2_7_0_1_cast = sext i61 %p_Val2_7_0_1 to i62

ST_24: tmp_37 [1/1] 0.00ns
.preheader1172:147  %tmp_37 = call i61 @_ssdm_op_BitConcatenate.i61.i31.i30(i31 %tmp_36, i30 0)

ST_24: tmp_20_0_1 [1/1] 0.00ns
.preheader1172:148  %tmp_20_0_1 = sext i61 %tmp_37 to i62

ST_24: p_Val2_8_0_1 [1/1] 3.40ns
.preheader1172:149  %p_Val2_8_0_1 = add i62 %p_Val2_7_0_1_cast, %tmp_20_0_1

ST_24: p_Val2_7_0_2_cast [1/1] 0.00ns
.preheader1172:157  %p_Val2_7_0_2_cast = sext i61 %p_Val2_7_0_2 to i62

ST_24: tmp_26 [1/1] 0.00ns
.preheader1172:158  %tmp_26 = call i32 @_ssdm_op_PartSelect.i32.i62.i32.i32(i62 %p_Val2_8_0_1, i32 30, i32 61)

ST_24: tmp_20_0_2 [1/1] 0.00ns
.preheader1172:159  %tmp_20_0_2 = call i62 @_ssdm_op_BitConcatenate.i62.i32.i30(i32 %tmp_26, i30 0)

ST_24: p_Val2_8_0_2 [1/1] 3.40ns
.preheader1172:160  %p_Val2_8_0_2 = add i62 %p_Val2_7_0_2_cast, %tmp_20_0_2

ST_24: p_Val2_7_1 [1/6] 6.08ns
.preheader1172:179  %p_Val2_7_1 = mul i61 %OP1_V_1_cast, %OP2_V_1_mid2_cast

ST_24: tmp_27 [1/1] 0.00ns
.preheader1172:181  %tmp_27 = call i32 @_ssdm_op_PartSelect.i32.i62.i32.i32(i62 %p_Val2_8_0_2, i32 30, i32 61)

ST_24: p_Val2_7_2 [2/6] 6.08ns
.preheader1172:222  %p_Val2_7_2 = mul i61 %OP1_V_2_cast, %OP2_V_2_mid2_cast


 <State 25>: 6.80ns
ST_25: p_1_mid2 [1/1] 1.37ns
.preheader1172:8  %p_1_mid2 = select i1 %exitcond_flatten, i10 %p_1_mid1, i10 %p_1

ST_25: tmp4_mid [1/1] 0.00ns (grouped into LUT with out node tmp4_mid3)
.preheader1172:17  %tmp4_mid = select i1 %exitcond_flatten, i10 %p_1_mid1, i10 %tmp4

ST_25: tmp4_mid3 [1/1] 1.37ns (out node of the LUT)
.preheader1172:84  %tmp4_mid3 = select i1 %exitcond_flatten_mid, i10 %p_1_mid2, i10 %tmp4_mid

ST_25: t_V_5_cast_mid1 [1/1] 0.00ns
.preheader1172:94  %t_V_5_cast_mid1 = zext i3 %x_V_2_dup to i10

ST_25: tmp4_mid1 [1/1] 1.84ns
.preheader1172:106  %tmp4_mid1 = add i10 %p_1_mid2, %t_V_5_cast_mid1

ST_25: tmp4_mid2 [1/1] 0.00ns (grouped into LUT with out node o_index_V)
.preheader1172:107  %tmp4_mid2 = select i1 %exitcond7_mid2, i10 %tmp4_mid1, i10 %tmp4_mid3

ST_25: t_V_7_cast [1/1] 0.00ns
.preheader1172:108  %t_V_7_cast = zext i3 %t_V_7_mid2 to i5

ST_25: p_Val2_7_1_cast [1/1] 0.00ns
.preheader1172:180  %p_Val2_7_1_cast = sext i61 %p_Val2_7_1 to i62

ST_25: tmp_20_1 [1/1] 0.00ns
.preheader1172:182  %tmp_20_1 = call i62 @_ssdm_op_BitConcatenate.i62.i32.i30(i32 %tmp_27, i30 0)

ST_25: p_Val2_8_1 [1/1] 3.40ns
.preheader1172:183  %p_Val2_8_1 = add i62 %p_Val2_7_1_cast, %tmp_20_1

ST_25: p_Val2_7_1_1_cast [1/1] 0.00ns
.preheader1172:190  %p_Val2_7_1_1_cast = sext i61 %p_Val2_7_1_1 to i62

ST_25: tmp_28 [1/1] 0.00ns
.preheader1172:191  %tmp_28 = call i32 @_ssdm_op_PartSelect.i32.i62.i32.i32(i62 %p_Val2_8_1, i32 30, i32 61)

ST_25: tmp_20_1_1 [1/1] 0.00ns
.preheader1172:192  %tmp_20_1_1 = call i62 @_ssdm_op_BitConcatenate.i62.i32.i30(i32 %tmp_28, i30 0)

ST_25: p_Val2_8_1_1 [1/1] 3.40ns
.preheader1172:193  %p_Val2_8_1_1 = add i62 %p_Val2_7_1_1_cast, %tmp_20_1_1

ST_25: tmp_30 [1/1] 0.00ns
.preheader1172:201  %tmp_30 = call i32 @_ssdm_op_PartSelect.i32.i62.i32.i32(i62 %p_Val2_8_1_1, i32 30, i32 61)

ST_25: p_Val2_7_2 [1/6] 6.08ns
.preheader1172:222  %p_Val2_7_2 = mul i61 %OP1_V_2_cast, %OP2_V_2_mid2_cast

ST_25: p_shl2 [1/1] 0.00ns
.preheader1172:248  %p_shl2 = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %t_V_7_mid2, i2 0)

ST_25: tmp3 [1/1] 1.72ns
.preheader1172:249  %tmp3 = add i5 %t_V_7_cast, %p_shl2

ST_25: tmp3_cast [1/1] 0.00ns (grouped into LUT with out node o_index_V)
.preheader1172:250  %tmp3_cast = zext i5 %tmp3 to i10

ST_25: o_index_V [1/1] 1.84ns (out node of the LUT)
.preheader1172:251  %o_index_V = add i10 %tmp3_cast, %tmp4_mid2


 <State 26>: 6.80ns
ST_26: p_Val2_7_1_2_cast [1/1] 0.00ns
.preheader1172:200  %p_Val2_7_1_2_cast = sext i61 %p_Val2_7_1_2 to i62

ST_26: tmp_20_1_2 [1/1] 0.00ns
.preheader1172:202  %tmp_20_1_2 = call i62 @_ssdm_op_BitConcatenate.i62.i32.i30(i32 %tmp_30, i30 0)

ST_26: p_Val2_8_1_2 [1/1] 3.40ns
.preheader1172:203  %p_Val2_8_1_2 = add i62 %p_Val2_7_1_2_cast, %tmp_20_1_2

ST_26: p_Val2_7_2_cast [1/1] 0.00ns
.preheader1172:223  %p_Val2_7_2_cast = sext i61 %p_Val2_7_2 to i62

ST_26: tmp_40 [1/1] 0.00ns
.preheader1172:224  %tmp_40 = call i32 @_ssdm_op_PartSelect.i32.i62.i32.i32(i62 %p_Val2_8_1_2, i32 30, i32 61)

ST_26: tmp_20_2 [1/1] 0.00ns
.preheader1172:225  %tmp_20_2 = call i62 @_ssdm_op_BitConcatenate.i62.i32.i30(i32 %tmp_40, i30 0)

ST_26: p_Val2_8_2 [1/1] 3.40ns
.preheader1172:226  %p_Val2_8_2 = add i62 %p_Val2_7_2_cast, %tmp_20_2

ST_26: tmp_41 [1/1] 0.00ns
.preheader1172:234  %tmp_41 = call i32 @_ssdm_op_PartSelect.i32.i62.i32.i32(i62 %p_Val2_8_2, i32 30, i32 61)


 <State 27>: 6.80ns
ST_27: p_Val2_7_2_1_cast [1/1] 0.00ns
.preheader1172:233  %p_Val2_7_2_1_cast = sext i61 %p_Val2_7_2_1 to i62

ST_27: tmp_20_2_1 [1/1] 0.00ns
.preheader1172:235  %tmp_20_2_1 = call i62 @_ssdm_op_BitConcatenate.i62.i32.i30(i32 %tmp_41, i30 0)

ST_27: p_Val2_8_2_1 [1/1] 3.40ns
.preheader1172:236  %p_Val2_8_2_1 = add i62 %p_Val2_7_2_1_cast, %tmp_20_2_1

ST_27: p_Val2_7_2_2_cast [1/1] 0.00ns
.preheader1172:243  %p_Val2_7_2_2_cast = sext i61 %p_Val2_7_2_2 to i62

ST_27: tmp_42 [1/1] 0.00ns
.preheader1172:244  %tmp_42 = call i32 @_ssdm_op_PartSelect.i32.i62.i32.i32(i62 %p_Val2_8_2_1, i32 30, i32 61)

ST_27: tmp_20_2_2 [1/1] 0.00ns
.preheader1172:245  %tmp_20_2_2 = call i62 @_ssdm_op_BitConcatenate.i62.i32.i30(i32 %tmp_42, i30 0)

ST_27: p_Val2_8_2_2 [1/1] 3.40ns
.preheader1172:246  %p_Val2_8_2_2 = add i62 %p_Val2_7_2_2_cast, %tmp_20_2_2

ST_27: sum_V_2_2 [1/1] 0.00ns
.preheader1172:247  %sum_V_2_2 = call i32 @_ssdm_op_PartSelect.i32.i62.i32.i32(i62 %p_Val2_8_2_2, i32 30, i32 61)

ST_27: tmp_3 [1/1] 0.00ns
.preheader1172:252  %tmp_3 = zext i10 %o_index_V to i64

ST_27: output_V_addr_2 [1/1] 0.00ns
.preheader1172:253  %output_V_addr_2 = getelementptr [800 x i32]* %output_V, i64 0, i64 %tmp_3

ST_27: p_Val2_3 [2/2] 2.71ns
.preheader1172:254  %p_Val2_3 = load i32* %output_V_addr_2, align 4


 <State 28>: 7.86ns
ST_28: stg_429 [1/1] 0.00ns
.preheader1172:0  call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @L_L_LOOP1_str)

ST_28: empty_25 [1/1] 0.00ns
.preheader1172:1  %empty_25 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 800, i64 800, i64 800)

ST_28: stg_431 [1/1] 0.00ns
.preheader1172:25  call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @L_L_LOOP1_str)

ST_28: stg_432 [1/1] 0.00ns
.preheader1172:90  call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @L_LOOP1_str)

ST_28: stg_433 [1/1] 0.00ns
.preheader1172:109  call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str) nounwind

ST_28: tmp_5 [1/1] 0.00ns
.preheader1172:110  %tmp_5 = call i32 (...)* @_ssdm_op_SpecRegionBegin([6 x i8]* @p_str)

ST_28: stg_435 [1/1] 0.00ns
.preheader1172:111  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str5) nounwind

ST_28: p_Val2_3 [1/2] 2.71ns
.preheader1172:254  %p_Val2_3 = load i32* %output_V_addr_2, align 4

ST_28: p_Val2_5 [1/1] 2.44ns
.preheader1172:255  %p_Val2_5 = add i32 %sum_V_2_2, %p_Val2_3

ST_28: stg_438 [1/1] 2.71ns
.preheader1172:256  store i32 %p_Val2_5, i32* %output_V_addr_2, align 4

ST_28: empty_26 [1/1] 0.00ns
.preheader1172:257  %empty_26 = call i32 (...)* @_ssdm_op_SpecRegionEnd([6 x i8]* @p_str, i32 %tmp_5)

ST_28: stg_440 [1/1] 0.00ns
.preheader1172:263  br label %.preheader1169


 <State 29>: 2.39ns
ST_29: t_V_2 [1/1] 0.00ns
.preheader1167:0  %t_V_2 = phi i6 [ %n_V_1, %4 ], [ 0, %.preheader1169 ]

ST_29: phi_mul [1/1] 0.00ns
.preheader1167:1  %phi_mul = phi i10 [ %next_mul, %4 ], [ 0, %.preheader1169 ]

ST_29: next_mul [1/1] 1.84ns
.preheader1167:2  %next_mul = add i10 %phi_mul, 25

ST_29: exitcond3 [1/1] 1.94ns
.preheader1167:3  %exitcond3 = icmp eq i6 %t_V_2, -32

ST_29: empty_27 [1/1] 0.00ns
.preheader1167:4  %empty_27 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32)

ST_29: n_V_1 [1/1] 1.72ns
.preheader1167:5  %n_V_1 = add i6 %t_V_2, 1

ST_29: stg_447 [1/1] 0.00ns
.preheader1167:6  br i1 %exitcond3, label %5, label %3

ST_29: tmp_4 [1/1] 0.00ns
:2  %tmp_4 = zext i6 %t_V_2 to i64

ST_29: b_conv1_addr [1/1] 0.00ns
:3  %b_conv1_addr = getelementptr [64 x i28]* @b_conv1, i64 0, i64 %tmp_4

ST_29: p_Val2_4 [2/2] 2.39ns
:4  %p_Val2_4 = load i28* %b_conv1_addr, align 4

ST_29: stg_451 [1/1] 0.00ns
:0  ret void


 <State 30>: 2.39ns
ST_30: stg_452 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str6) nounwind

ST_30: tmp [1/1] 0.00ns
:1  %tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([6 x i8]* @p_str6)

ST_30: p_Val2_4 [1/2] 2.39ns
:4  %p_Val2_4 = load i28* %b_conv1_addr, align 4

ST_30: p_Val2_3_cast [1/1] 0.00ns
:5  %p_Val2_3_cast = zext i28 %p_Val2_4 to i32

ST_30: stg_456 [1/1] 1.57ns
:6  br label %.loopexit


 <State 31>: 1.84ns
ST_31: t_V_4 [1/1] 0.00ns
.loopexit:0  %t_V_4 = phi i3 [ 0, %3 ], [ %x_V, %.preheader ]

ST_31: t_V_4_cast8 [1/1] 0.00ns
.loopexit:1  %t_V_4_cast8 = zext i3 %t_V_4 to i10

ST_31: exitcond5 [1/1] 1.62ns
.loopexit:2  %exitcond5 = icmp eq i3 %t_V_4, -3

ST_31: empty_28 [1/1] 0.00ns
.loopexit:3  %empty_28 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5)

ST_31: x_V [1/1] 0.80ns
.loopexit:4  %x_V = add i3 %t_V_4, 1

ST_31: stg_462 [1/1] 0.00ns
.loopexit:5  br i1 %exitcond5, label %4, label %.preheader.preheader

ST_31: tmp6 [1/1] 1.84ns
.preheader.preheader:0  %tmp6 = add i10 %t_V_4_cast8, %phi_mul

ST_31: stg_464 [1/1] 1.57ns
.preheader.preheader:1  br label %.preheader

ST_31: empty_30 [1/1] 0.00ns
:0  %empty_30 = call i32 (...)* @_ssdm_op_SpecRegionEnd([6 x i8]* @p_str6, i32 %tmp)

ST_31: stg_466 [1/1] 0.00ns
:1  br label %.preheader1167


 <State 32>: 6.27ns
ST_32: t_V_6 [1/1] 0.00ns
.preheader:0  %t_V_6 = phi i3 [ %y_V, %._crit_edge ], [ 0, %.preheader.preheader ]

ST_32: t_V_6_cast7 [1/1] 0.00ns
.preheader:1  %t_V_6_cast7 = zext i3 %t_V_6 to i5

ST_32: exitcond [1/1] 1.62ns
.preheader:2  %exitcond = icmp eq i3 %t_V_6, -3

ST_32: empty_29 [1/1] 0.00ns
.preheader:3  %empty_29 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5)

ST_32: y_V [1/1] 0.80ns
.preheader:4  %y_V = add i3 %t_V_6, 1

ST_32: stg_472 [1/1] 0.00ns
.preheader:5  br i1 %exitcond, label %.loopexit, label %._crit_edge

ST_32: p_shl4 [1/1] 0.00ns
._crit_edge:0  %p_shl4 = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %t_V_6, i2 0)

ST_32: tmp5 [1/1] 1.72ns
._crit_edge:1  %tmp5 = add i5 %p_shl4, %t_V_6_cast7

ST_32: tmp5_cast [1/1] 0.00ns
._crit_edge:2  %tmp5_cast = zext i5 %tmp5 to i10

ST_32: index_V [1/1] 1.84ns
._crit_edge:3  %index_V = add i10 %tmp6, %tmp5_cast

ST_32: tmp_1 [1/1] 0.00ns
._crit_edge:4  %tmp_1 = zext i10 %index_V to i64

ST_32: output_V_addr_1 [1/1] 0.00ns
._crit_edge:5  %output_V_addr_1 = getelementptr [800 x i32]* %output_V, i64 0, i64 %tmp_1

ST_32: p_Val2_s [2/2] 2.71ns
._crit_edge:6  %p_Val2_s = load i32* %output_V_addr_1, align 4


 <State 33>: 7.67ns
ST_33: p_Val2_s [1/2] 2.71ns
._crit_edge:6  %p_Val2_s = load i32* %output_V_addr_1, align 4

ST_33: biased_V [1/1] 2.44ns
._crit_edge:7  %biased_V = add i32 %p_Val2_s, %p_Val2_3_cast

ST_33: tmp_43 [1/1] 0.00ns
._crit_edge:8  %tmp_43 = trunc i32 %biased_V to i31

ST_33: tmp_8 [1/1] 2.52ns
._crit_edge:9  %tmp_8 = icmp sgt i32 %biased_V, 0


 <State 34>: 4.08ns
ST_34: p_Val2_2_s [1/1] 1.37ns
._crit_edge:10  %p_Val2_2_s = select i1 %tmp_8, i31 %tmp_43, i31 0

ST_34: p_Val2_2_cast [1/1] 0.00ns
._crit_edge:11  %p_Val2_2_cast = zext i31 %p_Val2_2_s to i32

ST_34: stg_486 [1/1] 2.71ns
._crit_edge:12  store i32 %p_Val2_2_cast, i32* %output_V_addr_1, align 4

ST_34: stg_487 [1/1] 0.00ns
._crit_edge:13  br label %.preheader



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
